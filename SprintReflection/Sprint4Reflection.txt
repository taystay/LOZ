After looking at the requirements for Sprint 4, we assigned items for each of us to do and began by working on the HUD and camera transitions. 
We started with two separate HUD sprites, one for the upper minimized hud and one for the extended larger HUD as well as a fading camera transition rather
than the sliding transition that we neded up with. We soon discovered that there were many issues with these implementations that led us the right direction.
First, we made camera states that would later handle the offsetting of rooms and the HUD for proper sliding transitions later as well as handling different
types of transitions (e.g. pausing, paused, unpausing, dungeonCamera, Inventory, MainMenu). Another issue we discovered when trying to implement the 
camera transition is that our rooms were improperly implemented with all of them layering on top of ecah other rather than being separate entities of their own.
Because of this, we had to refactor the entirety of CurrentRoom and Room in order to make rooms instanceable and have individual rooms handle their own 
special events. While refactoring we also updated camera transitions to the one we ended with with an offset variable that allows the rooms to slide in and out.
To do this, we also needed to change the HUD sprites to be a single sprite that was able to shifted to the top of the screen or down to reveal the whole
inventory. Due to the massive refactoring of our Room and CurrentRoom, we also decided to create a referencer for CurrentRoom that would serve as the 
single point of reference for all CurrentRoom related calls. Once that was done we finished polishing the interactions of each room and fixed bugs till turn in.